############################
##Kubernetes
############################

Docker          => One container on one host
Docker Compose  => Multiple Containers on Single host (Node)
Swarm /   k8s   => Multiple Containers on Multiple hosts (Kubernetes)

Container Orchestration Engines:
  - K8s (Earlier known as Borg)
  - Docker Swarm
  - Apache Mesosphere
  - OpenShift (RedHat)
Managed Kubernetes Cloud Services:
  - EKS (AWS)
  - AKS (Azure)
  - GKE (Google)
  k8s Keywords:
  - Pod
  - kubectl => Command line utility to talk to k8s
  - Nodes
  - Cluster
  - Master
  - Worker
  - Deployment
  - Services
  - ReplicaSets
  - Replication Controllers

  CRI => Container Runtime Interfaces
    - Docker
    - rkt
    - containerd

  CNI => Container Network Interface
    - Flannel
    - Weave
    - Calico

  CSI => Container Storage Interfaces
    - cinder
    - CephFS
    - GCE persistent disk

Keywords:
  - kubectl -

=============================
Kubernetes Architecture/Components
=============================

Kube Manager or Master:
  - Kube-apiserver
  - Kube-Controller Manager
  - Kube-Scheduler
  - etcd

Kube Worker Nodes:
  - Kubelet
  - kube-proxy
  - runtime (Docker/Rkt)

===========================
Kubernetes Primitives/Objects
===========================
  Pod
  ReplicaSets
  Deployments
  Services


YAML Files

  A => API version
  K => Kind ## this defines the type of object/primitive
  M => Metadata
  S => Specs (Specifications)

***************
edu-pod.yml
***************
---
apiVersion: v1
kind: Pod
metadata:
  name: edu-pod
spec:
  containers:
  - name: edu-app
    image: busybox
    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']

***************
web-rc.yml
***************
## Replication Controller Sample
apiVersion: v1
kind: ReplicationController
metadata:
  name: web
  labels:
    name: web
    app: demo
spec:
  replicas: 3
  template:
    metadata:
      labels:
        name: web
    spec:
      containers:
        - name: web
          image: xiaopeng163/docker-flask-demo:1.0
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP

***************
nginx-Deployment.yml
***************

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: edu-nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80

=============================
References
=============================

https://thenewstack.io/kubernetes-an-overview/
https://hub.docker.com/editions/community/docker-ce-desktop-windows
https://x-team.com/blog/introduction-kubernetes-architecture/
https://www.cncf.io/
https://kubernetes.io/docs/home/
https://www.edureka.co/blog/kubernetes-architecture/
https://thenewstack.io/kubernetes-an-overview/
https://www.katacoda.com/courses/kubernetes/playground
https://kubernetes.io/docs/tasks/tools/install-minikube/
https://chocolatey.org/ (for Windows users)
